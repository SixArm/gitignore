##
# SixArm gitignore file
#
# We use this gitignore file as a starter file for our projects.
# We typically add many more items here depending on the project.
#
# https://github.com/SixArm/gitignore/gitgnore
#
# These rules can be adjusted as you wish for your projects.
# We welcome constructive feedback, suggestions, questions, etc.
##

##
# Dot files and paths
##

# First reject dot path files, which are conventionally intended
# to be hidden files, or local only, or unversioned data, etc.
# Later on, you will override this rule to accept specific paths.
#
#     .foo
#     .foo-bar
#     .foo_bar

.*

# Accept git-specific files that are conventionally versioned,
# such as .gitignore files, .keep files that mark directories, etc.
#
#     .gitignore

!.gitignore
!.*.gitignore

!.keep
!.*.keep

# Accept dot paths that are considered example paths.
# These paths are for placeholders, samples, etc., such as:
#
#     .foo.example
#     .foo-example
#     .foo_example

!.*[-_.]example
!.*[-_.]example[-_.]*

# Accept dot paths that are considered encrypted paths.
# These paths are for secrets, confidential data, etc.
#
#     foo.argon2
#     foo.aes
#     foo.gpg
#     foo.pgp

!.*.argon2
!.*.aes
!.*.gpg
!.*.pgp

##
# Environment files and paths
##

# First reject environment paths, which are conventionally intended
# to be configuration variables, or local only, or for secrets, etc.

.env
.env[-_.]*

env
env[-_.]*

# Accept env paths that are considered example paths.
# These paths are for placeholders, samples, etc., such as:

!.env[-_.]example
!.env[-_.]example[-_.]*

!env[-_.]example
!env[-_.]example[-_.]*

# Accept env paths that are considered encrypted paths.
# These paths are for secrets, confidential data, etc.

!.env[-_.]argon2
!.env[-_.]aes
!.env[-_.]gpg
!.env[-_.]pgp

!.env[-_.]*.argon2
!.env[-_.]*.aes
!.env[-_.]*.gpg
!.env[-_.]*.pgp

!env[-_.]argon2
!env[-_.]aes
!env[-_.]gpg
!env[-_.]pgp

!env[-_.]*.argon2
!env[-_.]*.aes
!env[-_.]*.gpg
!env[-_.]*.pgp

##
# Artifact directories
#
# Ignore artifact directories, a.k.a. temporary file folders,
# using typical naming conventions from many technologies.
##

/**/build
/**/cache
/**/log
/**/target
/**/tmp
/**/temp
/**/vendor
